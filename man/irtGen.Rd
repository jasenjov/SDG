% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/utility.R
\name{irtGen}
\alias{irtGen}
\title{Generation according to the IRT model.}
\usage{
irtGen(its, sts, result = NULL, meanAb = 0, sdAb = 1.5, maxAb = 2.75,
  minAb = -2.75, meanDifIt = 0, sdDifIt = 1, maxItDif = 2.5,
  minItDif = -2.5, meanDisc = 1, sdDisc = 0, guess = 0.2, slip = 0.2)
}
\arguments{
\item{its}{Number of items.}

\item{sts}{Number of students.}

\item{result}{Students' performance matrix where each element represents if a student i has answered correctly (1) or not (0) to an item j. NULL by default.}

\item{meanAb}{If the results matrix is not provided. The abilities matrix will be generated according to the standard distribution with this parameter as the mean. 0 by default.}

\item{sdAb}{If the results matrix is not provided. The abilities matrix will be generated according to the standard distribution with this parameter as the standard deviation. Since the abilities matrix is a [-4,4] matrix, this parameter takes the value 2.5 by default.}

\item{maxAb}{If the results matrix is not provided. The abilities matrix will be generated according to the standard distribution.with this parameter as the mean. This parameter is the maximum ability allowed for a student .2.5 by default.}

\item{minAb}{If the results matrix is not provided. The abilities matrix will be generated according to the standard distribution.with this parameter as the mean. This parameter is the minimum ability allowed for a student .-2.5 by default.}

\item{meanDisc}{The items' discrimination matrix will be generated according to the normal distribution with the value of this parameter as the mean. 0 by default.}

\item{sdDisc}{The items' discrimination matrix will be generated according to the normal distribution with the value of this parameter as the standard deviation. 1 by default.}

\item{guess}{Even though according to the IRT approach the student has answered correctly to an item. The user can introduce a slip parameter.}

\item{slip}{Even though according to the IRT approach the student hasn't answered correctly to an item. The user can introduce a guess parameter.}

\item{meanDiffIt}{If the results matrix is not provided. The items' difficulty matrix will be generated according to the standard distribution with this parameter as the mean. 0 by default.}

\item{sdDiffIt}{If the results matrix is not provided. The items' difficulty matrix will be generated according to the standard distribution with this parameter as the standard deviation. Since the abilities matrix is a [-3,3] matrix, this parameter takes the value 1 by default.}

\item{maxDiffIt}{If the results matrix is not provided. The abilities matrix will be generated according to the standard distribution with this parameter as the mean. This parameter is the maximum item difficulty allowed. 2.5 by default.}

\item{minDiffIt}{If the results matrix is not provided. The abilities matrix will be generated according to the standard distribution with this parameter as the mean. This parameter is the minimum item difficulty allowed. 2.5 by default.}
}
\value{
A list with the following information:
 \item{results}{Students per items matrix where each element represents if the student answered correctly (1) or not (0) to the correspondent item.}
 \item{student.avg.ability}{An ability per student matrix where each element represents the ability of a student.}
 \item{item.difficulty}{A difficulty per item matrix where each element represents the difficulty of an item.}
}
\description{
This function generates students' performance data according to the IRT model. There is no Q-matrix or skills matrix involved.\cr
Each item has a difficulty 'b' and a discrimination parameter 'a'. IRT assumes that the probability of success to an item X_j is a function of a single ability factor \eqn{\theta} :
\deqn{P(X_j = 1 | \theta) = ( 1 / (1 + e^(-a_j * (\theta - b_j) ) ) ) }
The ability of each student is generated using the normal distribution with parameters that can be modeled. It's normalized between -4 and 4.\cr
The items' difficulties will be generated according to the normal distribution with modifiables parameters as well. It's normalized between -3 and 3.\cr
However, a students' performance matrix,representing the success or failure of a set of students to a set of items, can be provided so as the abilities and item difficulty matrices can be generated learning from that given matrix.\cr
\cr
Moreover, there is also the possibility of introducing a slip and guess noise. In that case an expected success (1) could become a failure (0) depending on the slip parameter.
In the same way, an expected failure (0) could become a success (1) depending on the guess parameter.
}
\examples{
#####EXAMPLE 1 : Generation introducing the minimum number of parameters required #####

 #We generate data for 3 students and 5 items.
 result = irtGen(its = 5, sts = 3)

 # We extract the correspondent information

 performance  <- result$results
 performance
       [,1] [,2] [,3] [,4] [,5]
 [1,]    0    1    0    0    1
 [2,]    0    0    0    1    1
 [3,]    0    0    0    0    0

 abilities  <- result$student.avg.ability
 abilities
         [,1]       [,2]       [,3]
 [1,] -2.211515 -0.1775592 -0.6316655

 difficulties  <- result$item.difficulty
 difficulties
         [,1]      [,2]      [,3]       [,4]      [,5]
 [1,] 0.3132829 0.1178107 0.5078971 -0.5025616 -0.439553

 #####EXAMPLE 2 : Generation introducing a students' performance matrix as reference #####

 #We generate a students' performance data according to the IRT model.
 reference  <- irtGen(sts = 3, its = 20)$result
 reference
       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] [,15] [,16]
 [1,]    1    1    1    1    1    1    1    0    1     1     1     0     0     0     1   ...
 [2,]    0    0    0    1    1    0    1    0    1     0     0     0     0     1     1   ...
 [3,]    0    0    0    1    1    0    1    0    1     0     0     0     1     1     0   ...

 #We generate data for 3 students and 20 items. A reference matrix is provided to learn about
 the students abilities and the items difficulties.
 result  <-  irtGen(its = 20, sts = 3,result = reference)

 # We extract the correspondent information
 performance  <- result$results
 performance
       [,1] [,2] [,3]
 [1,]    1    0    1
 [2,]    1    0    0
 [3,]    0    1    0

 abilities  <- result$student.avg.ability
 abilities
       [,1] [,2] [,3]
 [1,]    0 -2.4    2

 difficulties  <- result$item.difficulty
 difficulties
       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] [,15] [,16]
 [1,]   -1   -1   -1    3    3   -1    3   -3    3    -1    -1    -3    -1     1     1   ...
}
\references{
Beheshti, B. and Desmarais, M. C. (2014). Assessing model fit with synthetic vs. real data. Polytechnique Montreal.
}
\seealso{
\code{\link{randGen}} for the external students' performance data from which this function can learn.\cr
 \code{\link{minGen}} for the external students' performance data from which this function can learn.\cr
 \code{\link{avgGen}} for the external students' performance data from which this function can learn.\cr
 \code{\link{dinGen}} for the external students' performance data from which this function can learn.\cr
 \code{\link{irtGen}} for the external students' performance data from which this function can learn.\cr
 \code{\link{poksGen}} for the external students' performance data from which this function can learn.\cr
}

