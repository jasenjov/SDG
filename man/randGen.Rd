% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/utility.R
\name{randGen}
\alias{randGen}
\title{Performance data generation according to independent probabilities of success. Linear model.}
\usage{
randGen(its, sts, success.prob.matrix = NULL, mean = 0, deviation = 1)
}
\arguments{
\item{its}{Number of items.}

\item{sts}{Number of students.}

\item{success.prob.matrix}{Matrix with dimension students*items. Each value represents the probability of a student i to success the item j.[0-1] matrix. NULL by default}

\item{mean}{If the success.prob.matrix is not provided to the function, this parameter is the mean used to generate that matrix according to the standard distribution (normalized afterwards between 0 and 1). 0 by default.}

\item{deviation}{If the success.prob.matrix is not provided to the function, this parameter is the normal deviation used to generate that matrix according to the standard distribution (normalized afterwards between 0 and 1). 1 by default.}
}
\value{
A list with the following information:
 \item{results}{Students per items matrix where each element represents if the student answered correctly (1) or not (0) to the correspondent item.}
 \item{success.prob.matrix}{A student per item matrix where each element represents the probability of a student to answer correctly to the correspondent item.}
}
\description{
This function generates students' performance data without considering neither a skills per student matrix nor a Q-Matrix. \cr
All the students are answering to all the items according to a [0-1] students per items matrix where each element represents the probability of the student i to succeed the item j.
The mentioned matrix (students x items) is generated by default according to the normal distribution with a mean of 0 and a standard deviation of 1. \cr
The user can modify those parameters. However, the user can also introduce the matrix by himself.
}
\examples{
##### EXAMPLE 1 : Generation just introducing the number of items and students #####

 # We generate student performance data about 3 students answering to 5 items
 result <- randGen(its = 5, sts = 3)

 # We extract the correspondent information

 performance <- result$results
 performance
       [,1] [,2] [,3] [,4] [,5]
 [1,]    0    1    1    1    0
 [2,]    1    1    1    0    1
 [3,]    1    0    1    0    0

 success.probabilities <- result$success.prob.matrix
 success.probabilities
         [,1]       [,2]      [,3]      [,4]      [,5]
 [1,] 0.01231753 0.90747166 0.4095728 0.9999342 0.2118582
 [2,] 0.68874955 0.81822425 0.6833268 0.8773570 0.7834774
 [3,] 0.73083892 0.02549496 0.7293477 0.2291466 0.4035640


 ###EXAMPLE 2 : Generation modeling the mean and standard deviation of the standard distribution##

 # We generate student performance data about 3 students answering to 5 items with a mean of 0.5 \\cr

 and a standard deviation of 0.2.
 result <- randGen(its = 5, sts = 3,mean = 0.5,deviation=0.2)

 # We extract the correspondent information

 performance  <- result$results
 performance
       [,1] [,2] [,3] [,4] [,5]
 [1,]    1    1    1    1    1
 [2,]    1    1    1    1    0
 [3,]    1    1    0    1    0

 success.probabilities <- result$success.prob.matrix
 success.probabilities
         [,1]      [,2]      [,3]      [,4]      [,5]
 [1,] 0.8237951 0.6739213 0.7073844 0.7008126 0.7444546
 [2,] 0.5642406 0.6735758 0.7183799 0.6911244 0.5717511
 [3,] 0.7246194 0.8351532 0.6331505 0.6782793 0.6518936


 ##### EXAMPLE 3 : Generation providing the student per item success probability matrix #####

 # We first generate the desired matrix
 prob.success  <- successProbGen(its = 5, sts = 3)
 prob.success
         [,1]      [,2]      [,3]      [,4]      [,5]
 [1,] 0.3788828 0.6811485 0.7916251 0.4924259 0.7644050
 [2,] 0.6076803 0.7911027 0.9229351 0.9763337 0.4992891
 [3,] 0.9118014 0.9351249 0.7218492 0.7246330 0.8756847

 # We generate student performance data about 3 students answering to 5 items according to a \\cr
 given matrix.
 result <- randGen(its = 5, sts = 3,success.prob.matrix = prob.success)

 # We extract the correspondent information

 performance <- result$results
 performance
       [,1] [,2] [,3] [,4] [,5]
 [1,]    0    1    1    0    1
 [2,]    0    1    1    1    0
 [3,]    1    1    1    0    1

 success.probabilities  <- result$success.prob.matrix
 # We expect the same as provided
 success.probabilities
         [,1]      [,2]      [,3]      [,4]      [,5]
 [1,] 0.3788828 0.6811485 0.7916251 0.4924259 0.7644050
 [2,] 0.6076803 0.7911027 0.9229351 0.9763337 0.4992891
 [3,] 0.9118014 0.9351249 0.7218492 0.7246330 0.8756847
}
\seealso{
\code{\link{successProbGen}} for the external generation of a student per item probability of success matrix.
 \cr
}

