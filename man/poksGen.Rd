% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/utility.R
\name{poksGen}
\alias{poksGen}
\title{Generation according to the POKS model.}
\usage{
poksGen(its, sts, dependencies = NULL, result = NULL, success.avg = NULL,
  p1, mean = 0, deviation = 1)
}
\arguments{
\item{its}{Number of items.}

\item{sts}{Number of students.}

\item{dependencies}{The poks matrix. NULL by default}

\item{success.avg}{Matrix with the success rate of each student.}

\item{p1}{Probability of succeeding an item having succeeded a more difficult one related to it.}

\item{mean}{If the results matrix is not provided to the function, the students' success rate matrix will be generated according to the normal function with this parameter as the mean value. 0 by default.}

\item{deviation}{If the results matrix is not provided to the function, the students' success rate matrix will be generated according to the normal function with this parameter as the standard deviation value. 1 by default.}

\item{results}{A students' performance matrix from which the function learns to generate the students' success rate matrix.}
}
\value{
A list with the following information:
 \item{results}{Students per items matrix where each element represents if the student answered correctly (1) or not (0) to the correspondent item.}
 \item{poks.matrix}{The matrix that matches each item with the items that depend on itself.}
 \item{success.avg}{A matrix with the success average of each student}
}
\description{
In this model, there is a matrix of items per items that represents the dependencies between items. It's called poks matrix and it gives the Partial Orders Knowledge Structure (POKS).
Meaning that, if a student answer correctly to an item B, he will have a higher chance to succeed items related to B but easier.
That can be modeled as \eqn{P(A|B) = p1}. It's a \{0,1\} matrix where a 1 in the position (i,j) means that suceeding the item i increases the possibilities of succeeding the item j.\cr
When there is no knowledge about an item, the probability of succeeding this item will depends on the student's success rate. This rate can be learned providing a students' performance matrix to the function.
Otherwise, it will be generated according to the normal distribution normalized to [0-1] values.
}
\examples{
#####EXAMPLE 1 : Generation introducing the minimum number of parameters required #####

 #We generate data for 3 students and 5 items. The probability P(A|B) = 0.85
 result <- poksGen(its = 5, sts = 3, p1 = 0.85)

 # We extract the correspondent information

 performance  <- result$results
 performance
       [,1] [,2] [,3] [,4] [,5]
 [1,]    0    1    1    0    0
 [2,]    0    1    1    0    0
 [3,]    1    1    1    1    1

 poks.matrix   <- result$poks.matrix
 poks.matrix
       [,1] [,2] [,3] [,4] [,5]
 [1,]    0    1    0    1    1
 [2,]    0    0    1    0    0
 [3,]    0    0    0    0    0
 [4,]    0    0    0    0    0
 [5,]    0    0    0    0    0

 success.avg  <- result$success.avg
 success.avg
         [,1]     [,2]      [,3]
 [1,] 0.2933311 0.419173 0.5056854


 #####EXAMPLE 2 : Generation introducing a students' performance matrix as reference and an
 external poks matrix#####

 #We generate the students' performance data form which we want to learn
 reference <- poksGen(its = 20, sts = 3, p1 = 0.85)$result
 reference
       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] [,15] [,16]
 [1,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0     0   ...
 [2,]    0    0    0    0    0    0    0    0    0     0     0     0     0     0     0   ...
 [3,]    0    1    1    0    0    1    1    1    1     1     0     1     1     1     0   ...

 #We generate an external poks matrix
 poks.matrix  <- poksMatrixGen(its = 8, depNum = 5, trees = 2, indirect.dependencies = TRUE)
 poks.matrix
       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]
 [1,]    0    1    0    1    0    0    0    0
 [2,]    0    0    1    0    0    0    0    0
 [3,]    0    0    0    0    0    0    0    0
 [4,]    0    0    0    0    0    0    0    0
 [5,]    0    0    0    0    0    1    1    0
 [6,]    0    0    0    0    0    0    0    0
 [7,]    0    0    0    0    0    0    0    0
 [8,]    0    0    0    0    0    0    0    0

 #We generate the data according to the parameters generated
 result <- poksGen(its = 8, sts = 3 , dependencies = poks.matrix, result = reference,p1 = 0.85)

 # We extract the correspondent information

 performance  <- result$results
 performance
       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]
 [1,]    0    0    0    0    0    0    0    0
 [2,]    0    0    0    0    0    0    0    0
 [3,]    0    0    0    1    1    1    1    1

 poks.matrix   <- result$poks.matrix
 poks.matrix
       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]
 [1,]    0    1    0    1    0    0    0    0
 [2,]    0    0    1    0    0    0    0    0
 [3,]    0    0    0    0    0    0    0    0
 [4,]    0    0    0    0    0    0    0    0
 [5,]    0    0    0    0    0    1    1    0
 [6,]    0    0    0    0    0    0    0    0
 [7,]    0    0    0    0    0    0    0    0
 [8,]    0    0    0    0    0    0    0    0

 success.avg  <- result$success.avg
 success.avg
       [,1] [,2] [,3]
 [1,]    0    0  0.65
}
\references{
Beheshti, B. and Desmarais, M. C. (2014). Assessing model fit with synthetic vs. real data.
}
\seealso{
\code{\link{randGen}} for the external students' performance data from which this function can learn.\cr
 \code{\link{minGen}} for the external students' performance data from which this function can learn.\cr
 \code{\link{avgGen}} for the external students' performance data from which this function can learn.\cr
 \code{\link{dinGen}} for the external students' performance data from which this function can learn.\cr
 \code{\link{irtGen}} for the external students' performance data from which this function can learn.\cr
 \code{\link{poksGen}} for the external students' performance data from which this function can learn.\cr
 \code{\link{poksMatrixGen}} for the external students' performance data from which this function can learn.\cr
}

