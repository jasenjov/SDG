% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/utility.R
\name{dinGen}
\alias{dinGen}
\title{Generation according to the DINA/DINO model.}
\usage{
dinGen(its, sts, rank, q = NULL, guess = rep(0.2, nrow(q)), slip = guess,
  skills = NULL, mean = 0, deviation = 1, model = "DINA")
}
\arguments{
\item{its}{Number of items.}

\item{sts}{Number of students.}

\item{rank}{Number of skills the set of items has.}

\item{q}{Q-Matrix representing the skills required to succeed an item. Skills per item matrix.{0,1} values. NULL by default.}

\item{guess}{A vector with the guess parameter for each item. If the student doesn't master the skills required to succeed the correspondent item, the probability of succeeding that item will be the guess value corresponding to this item. 0.2 by default.}

\item{slip}{A vector with the slip parameter for each item. If the student master the skills required to succeed the correspondent item, the probability of answering wrong to that item will be the slip value corresponding to this item. Same as the guess parameter by default.}

\item{skills}{Matrix representing the probability of each student to answer correctly to an item involving a specific skill. Students per skills matrix.This matrix will help to generate the skills mastery matrix. A probability above 0.5 will be considered as mastering the skill.[0-1] values. NULL by default.}

\item{mean}{If the skills matrix is not provided to the function, this parameter is the mean used to generate that matrix according to the standard distribution. 0 by default.}

\item{deviation}{If the skills matrix is not provided to the function, this parameter is the standard deviation used to generate that matrix according to the standard distribution. 1 by default.}

\item{model}{Model chosen between 'DINA' and 'DINO'. 'DINA' by default.}
}
\value{
A list with the following information:
 \item{results}{Students per items matrix where each element represents if the student answered correctly (1) or not (0) to the correspondent item.}
 \item{skills.mastery}{A student per skill matrix where each element represents if a student masters a skill or not.}
 \item{q.matrix}{The Q-matrix used.}
}
\description{
This function generates the students' performance data according to a Q-matrix sampling model where more than one skill can be required to succeed an item. \cr
Given a set of skills involved in the set of items, there is a matrix where each element represents the probability of a student mastering the correspondent skill. It's a students per skills matrix. \{0,1\} values.  \cr
According to the information provided by the Q-Matrix, if an item requires 2 skills, the probability of a student to answer correctly to that item will depend on the model chosen and the skills the student masters.\cr
If the DINA model is chosen and the student masters both skills, he will answer wrong with a probability corresponding to the slip value proper to this item. Otherwise, if he doesn't master both skills, he will get a  chance to answer right corresponding to the guess parameter. \cr
If the DINO model is chosen and the student masters one of both skills, he will answer wrong with a probability corresponding to the slip value proper to this item. Otherwise, if he doesn't master any of the skills involved, he will get a chance to answer right corresponding to the guess parameter.
}
\examples{
#####EXAMPLE 1 : Generation introducing the minimum number of parameters required (DINA model) #####

 # We generate student performance data about 3 students answering to 5 items and 3 skills. DINA model.
 result <- dinGen(its = 5,sts = 3,rank = 3)

 # We extract the correspondent information

 performance <- result$results
 performance
       [,1] [,2] [,3] [,4] [,5]
 [1,]    1    1    0    0    1
 [2,]    0    0    1    0    1
 [3,]    0    0    1    1    0

 skills.mastery  <- result$skills.mastery
 skills.mastery
       [,1] [,2] [,3]
 [1,]    1    1    0
 [2,]    1    0    1
 [3,]    0    1    1

 q.matrix  <- result$q.matrix
 q.matrix
       [,1] [,2] [,3] [,4] [,5]
 [1,]    0    1    0    0    1
 [2,]    1    1    0    0    0
 [3,]    0    0    1    1    1


 #####EXAMPLE 2 : Generation modeling the skills matrix parameters (skills mastery matrix) (DINO model)#####

 # We generate student performance data about 3 students answering to 5 items and 3 skills. DINO model.
 #For the stantard distribution (skills matrix), we use a mean of 0.5 and a standard deviation of 0.2.
 result <- dinGen(its = 5,sts = 3,rank = 3,mean = 0.5,deviation = 0.2,model = 'DINO')

 # We extract the correspondent information

 performance <- result$results
 performance
       [,1] [,2] [,3] [,4] [,5]
 [1,]    1    0    1    1    0
 [2,]    1    1    0    1    1
 [3,]    1    0    1    1    1

 skills.mastery  <- result$skills.mastery
 skills.mastery
     [,1] [,2] [,3]
 [1,]    1    1    1
 [2,]    1    1    1
 [3,]    1    1    1

 q.matrix  <- result$q.matrix
 q.matrix
       [,1] [,2] [,3] [,4] [,5]
 [1,]    0    0    1    1    0
 [2,]    0    0    0    1    0
 [3,]    1    1    0    0    1

 #####EXAMPLE 3 : Generation introducing a Q-Matrix (DINA model)#####

 #We generate a Q-Matrix with 3 skills involved.
 q.matrix <- QgenInc(num.skills = 3, maxSkillsPerItem = 3)
 q.matrix
       [,1] [,2] [,3] [,4] [,5] [,6] [,7]
 [1,]    1    0    0    1    1    0    1
 [2,]    0    1    0    1    0    1    1
 [3,]    0    0    1    0    1    1    1

 # We generate student performance data about 3 students answering to 7 items and 3 skills. DINA model.
 result <- dinGen(its = 7,sts = 3,rank = 3,q = q.matrix)

 # We extract the correspondent information

 performance <- result$results
 performance
       [,1] [,2] [,3] [,4] [,5] [,6] [,7]
 [1,]    1    0    0    0    0    0    0
 [2,]    0    0    1    0    0    0    1
 [3,]    1    1    1    1    0    1    1

 skills.mastery  <- result$skills.mastery
 skills.mastery
       [,1] [,2] [,3]
 [1,]    1    1    0
 [2,]    0    1    0
 [3,]    1    1    1

 q.matrix  <- result$q.matrix
 q.matrix
       [,1] [,2] [,3] [,4] [,5] [,6] [,7]
 [1,]    1    0    0    1    1    0    1
 [2,]    0    1    0    1    0    1    1
 [3,]    0    0    1    0    1    1    1


 #####EXAMPLE 4 : Generation introducing a Q-Matrix and a skills mastery matrix(DINO model)#####

 #We generate a Q-Matrix with 3 skills involved.
 q.matrix <- QgenInc(num.skills = 3, maxSkillsPerItem = 3)
 q.matrix
       [,1] [,2] [,3] [,4] [,5] [,6] [,7]
 [1,]    1    0    0    1    1    0    1
 [2,]    0    1    0    1    0    1    1
 [3,]    0    0    1    0    1    1    1
 #We generate a skills matrix  skills for 3 students, 3 skills, a mean of 0 and a standard deviation
 of 1.
 skills  <- skillsGen(sts = 3,mean = 0,deviation = 1,rank = 3)
 skills
         [,1]      [,2]      [,3]
 [1,] 0.8362343 0.5610519 0.9333690
 [2,] 0.7390838 0.8986089 0.6403717
 [3,] 0.3655802 0.7970677 0.3658878

 # We generate student performance according to the Q-matrix and de skills matrix generated.
 DINO model.
 result <- dinGen(its = 7,sts = 3,rank = 3,q = q.matrix,skills=skills,model='DINO')

 # We extract the correspondent information

 performance <- result$results
 performance
       [,1] [,2] [,3] [,4] [,5] [,6] [,7]
 [1,]    0    1    0    0    1    0    1
 [2,]    1    1    1    1    1    0    0
 [3,]    0    1    0    0    0    1    1

 skills.mastery  <- result$skills.mastery
 skills.mastery
       [,1] [,2] [,3]
 [1,]    1    1    1
 [2,]    1    1    1
 [3,]    0    1    0

 q.matrix  <- result$q.matrix
 q.matrix
       [,1] [,2] [,3] [,4] [,5] [,6] [,7]
 [1,]    1    0    0    1    1    0    1
 [2,]    0    1    0    1    0    1    1
 [3,]    0    0    1    0    1    1    1
}
\references{
\url{http://cran.r-project.org/web/packages/CDM/}
}
\seealso{
\code{\link{QgenInc}} for the external generation of a Q-matrix.\cr
 \code{\link{QgenReg}} for the external generation of a Q-matrix.\cr
 \code{\link{extendQ}} for the external generation of a Q-matrix.\cr
 \code{\link{reduceQ}} for the external generation of a Q-matrix.\cr
 \code{\link{skillsGen}} for the external generation of the skills matrix.\cr
}

